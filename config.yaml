# Environment-related parameters
environment:
  use_app_mention: false
  show_thought_process: true
  show_kg_link: true
  log_name: Virtual-Havruta

# DB-related parameters
database:
  embed:
    url: bolt://publicip:7687
    username: user
    password: password@dev
    top_k: 15
    metadata_fields: ['metadata_field_name1', 'metadata_field_name2']
    topic_fields: ['topic_field_name1', 'topic_field_name2']
  kg:
    url: bolt://publicip_kg:7687
    username: user
    password: password@dev
    order: 1
    direction: both_ways # The direction of the edges between nodes, one of 'incoming', 'outgoing', 'both_ways'. 
    # In the Sefaria KG, edges point from newer to older references. 'incoming' leads to searching for newer references, 'outgoing' for older references, and 'both_ways' for both.
    k_seeds: 5 # number of starting seeds for search, chosen by semantic similarity
    max_depth: 2 # maximum number of retrieved chunks at the end of the kg search step. This also limits the maximum path length between any seed node and any node corresponding to a retrieved chunk.
    name: db_name
    neo4j_deeplink: http://neodash.graphapp.io/xyz

# Slack-related parameters
slack:
  slack_bot_token: slack_bot_token
  slack_app_token: slack_app_token
  
# Model API parameters
openai_model_api:
  api_key: openai_model_api_key
  main_model: main_model_name
  main_model_temperature: 0
  support_model: support_model_name
  support_model_temperature: 0
  embedding_model: embedding_model_name

# LLM Chain Setups
llm_chain_setups:
  main_model: ['chain1', 'chain2']
  main_model_json: ['chain3'] #LLM chains that require a json output format
  support_model: ['chain4', 'chain5', 'chain6']
  support_model_json: [] #LLM chains that require a json output format
  ref_chains: ['chain1', 'chain3', 'chain4', 'chain5'] #LLM chains that require reference data as part of the input. These should correspond to those chains in main_model(_json) and support_model(_json).
  no_ref_chains: ['chain2', 'chain6'] #LLM chains that don't require reference data as part of the input. These should correspond to those chains in main_model(_json) and support_model(_json).

# Reference Settings
references:
  primary_source_filter: ['filter1', 'filter2', 'filter3']
  num_primary_citations: 1
  num_secondary_citations: 1

linker_references:
  primary_source_filter: ['filter1', 'filter2', 'filter3', 'filter4', 'filter5']
  num_primary_citations: -1
  num_secondary_citations: -1
